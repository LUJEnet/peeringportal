@page
@using MySqlConnector;
@using System.Collections;
@using System.Text;
@using LUJEWebsite.app.Utils;
@{
	Response.ContentType = "text/yaml";
	Layout = null;
	var output = new StringBuilder();
	output.AppendLine("---");
	MySqlConnection peeringdb_conn = new MySqlConnection(Configuration.PeeringDBPath);
	peeringdb_conn.Open();
	MySqlConnection luje_conn = new MySqlConnection(Configuration.DBPath);
	luje_conn.Open();
	MySqlCommand luje_cmd = new MySqlCommand("select peering.peering_peeringdb_id from peering where peering_active = 1 and peering_deleted = 0;", luje_conn);
	MySqlDataReader luje_rdr = luje_cmd.ExecuteReader();

	var peeringList = new ArrayList();

	@while (luje_rdr.Read())
	{
		string peeringdb_id = luje_rdr["peering_peeringdb_id"].ToString();
		peeringList.Add(peeringdb_id);
	}
	luje_rdr.Close();

	foreach (string peer in peeringList)
	{

		MySqlCommand peeringdb_cmd = new MySqlCommand("select name, asn, irr_as_set from peeringdb_network where id = @peeringdb_id;", peeringdb_conn);
		peeringdb_cmd.Prepare();
		peeringdb_cmd.Parameters.AddWithValue("@peeringdb_id", peer);
		MySqlDataReader peeringdb_rdr = peeringdb_cmd.ExecuteReader();
		if (peeringdb_rdr.Read())
		{
			string asn = "AS" + peeringdb_rdr["asn"].ToString();
			string name = peeringdb_rdr["name"].ToString();
			string asset = "";
			if (peeringdb_rdr["irr_as_set"].ToString() != "")
			{
				var assetBuilder = new StringBuilder();
				asset = peeringdb_rdr["irr_as_set"].ToString();
				String[] spearator = { " " };
				String[] assetlist = asset.Split(spearator, StringSplitOptions.RemoveEmptyEntries);
				foreach (string assetPart in assetlist)
				{
					String[] spearatorPart = { "::" };
					String[] assetlistPart = assetPart.Split(spearatorPart, StringSplitOptions.RemoveEmptyEntries);
					if (assetlistPart.Count() == 1)
					{
						assetBuilder.Append(assetlistPart[0]);
						assetBuilder.Append(" ");
					}
					else
					{
						assetBuilder.Append(assetlistPart[1]);
						assetBuilder.Append(" ");
					}
				}

				asset = assetBuilder.ToString().Trim();
			}
			else
			{
				asset = asn;
			}
			peeringdb_rdr.Close();


			output.Append(asn);
			output.AppendLine(":");

			output.Append("    description: ");
			output.AppendLine(name);
			output.Append("    import: ");
			output.AppendLine(asset);
			output.Append("    export: ");
			output.AppendLine(Configuration.PortalExport);
			output.AppendLine("    only_with:");

			luje_cmd = new MySqlCommand("select peering_ips.peering_ips_id, peering_ips.peering_ips_peeringdb_lanid, peering_ips.peering_ips_peeringdb_addrid, peering_ips.peering_ips_type, peering.peering_peeringdb_id from peering_ips inner join peering on peering.peering_id = peering_ips.peering_ips_peering_id and peering.peering_deleted = 0 where peering.peering_peeringdb_id = @peer and peering_ips_active = 1 and peering_ips_deleted = 0;", luje_conn);
			luje_cmd.Prepare();
			luje_cmd.Parameters.AddWithValue("@peer", peer);
			luje_rdr = luje_cmd.ExecuteReader();

			while (luje_rdr.Read())
			{
				peeringdb_cmd = new MySqlCommand("select peeringdb_network_ixlan.id, peeringdb_ix.name as ix_name, peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.net_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6, peeringdb_network.asn, peeringdb_network.name from peeringdb_network_ixlan inner join peeringdb_network on peeringdb_network.id = peeringdb_network_ixlan.net_id inner join peeringdb_ixlan on peeringdb_ixlan.id = peeringdb_network_ixlan.ixlan_id inner join peeringdb_ix on peeringdb_ix.id = peeringdb_ixlan.ix_id where peeringdb_network.id = @peeringdb_id and peeringdb_network_ixlan.id = @addrid and peeringdb_network_ixlan.ixlan_id = @lanid;", peeringdb_conn);
				peeringdb_cmd.Prepare();
				peeringdb_cmd.Parameters.AddWithValue("@peeringdb_id", luje_rdr["peering_peeringdb_id"].ToString());
				peeringdb_cmd.Parameters.AddWithValue("@addrid", luje_rdr["peering_ips_peeringdb_addrid"].ToString());
				peeringdb_cmd.Parameters.AddWithValue("@lanid", luje_rdr["peering_ips_peeringdb_lanid"].ToString());

				peeringdb_rdr = peeringdb_cmd.ExecuteReader();
				if (peeringdb_rdr.Read())
				{
					string addr = "";
					if (luje_rdr["peering_ips_type"].ToString() == "4")
					{
						addr = peeringdb_rdr["ipaddr4"].ToString();
					}
					else if (luje_rdr["peering_ips_type"].ToString() == "6")
					{
						addr = peeringdb_rdr["ipaddr6"].ToString();
					}
					output.Append("      - ");
					output.AppendLine(addr);
				}
				peeringdb_rdr.Close();
			}
			luje_rdr.Close();

			luje_cmd = new MySqlCommand("select peering_ips_extra.peering_ips_extra_addr from peering_ips_extra inner join peering on peering.peering_id = peering_ips_extra.peering_ips_extra_peering_id and peering.peering_deleted = 0 where peering.peering_peeringdb_id = @peer and peering_ips_extra_active = 1 and peering_ips_extra_deleted = 0;", luje_conn);
			luje_cmd.Prepare();
			luje_cmd.Parameters.AddWithValue("@peer", peer);
			luje_rdr = luje_cmd.ExecuteReader();

			while (luje_rdr.Read())
			{
				output.Append("      - ");
				output.AppendLine(luje_rdr["peering_ips_extra_addr"].ToString());
			}
			luje_rdr.Close();
		}
		else
		{
			peeringdb_rdr.Close();
		}
		output.AppendLine("");
	}
	peeringdb_conn.Close();
	luje_conn.Close();

	Response.WriteAsync(output.ToString());
}