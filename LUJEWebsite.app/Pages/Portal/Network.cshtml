@page
@using Newtonsoft.Json.Linq;
@using LUJEWebsite.app.Extentions;
@using LUJEWebsite.app.Model;
@using MySqlConnector;
@using System.Collections;
@using LUJEWebsite.app.Utils;
@{
	HttpClient client = new HttpClient();
	ViewData["Title"] = "Peering Portal";
	bool loggedin = false;
	bool admin = false;
	string accessToken = "";
	Network selectedNetwork = null;
	if (HttpContext.Session.Get<Boolean>("loggedin") != null && HttpContext.Session.Get<Boolean>("loggedin") == true)
	{
		string asn = Request.Query["asn"];
		if (asn != "")
		{
			Profile profile = HttpContext.Session.Get<Profile>("profile");
			foreach (Network network in profile.networks)
			{
				if(network.asn.ToString() == asn)
				{
					selectedNetwork = network;
					loggedin = true;
				}
			}
		}
	}
	if (HttpContext.Session.Get<Boolean>("admin") != null && HttpContext.Session.Get<Boolean>("loggedin") == true)
	{
		admin = true;
	}
}

@if (!loggedin)
{
	Response.Redirect("/portal/");
}
else
{
	try
	{
		Profile profile = HttpContext.Session.Get<Profile>("profile");
		string asn = "AS" + selectedNetwork.asn;
		MySqlConnection peeringdb_conn = new MySqlConnection(Configuration.PeeringDBPath);
		peeringdb_conn.Open();
		MySqlConnection luje_conn = new MySqlConnection(Configuration.DBPath);
		luje_conn.Open();

		MySqlCommand peeringdb_cmd = new MySqlCommand("select peeringdb_network_ixlan.ixlan_id from peeringdb_network_ixlan where asn = @portalowner;", peeringdb_conn);
		peeringdb_cmd.Prepare();
		peeringdb_cmd.Parameters.AddWithValue("@portalowner", Configuration.PortalOwnerAsn);
		MySqlDataReader peeringdb_rdr = peeringdb_cmd.ExecuteReader();
		var ixlanlist = new ArrayList();
		while (peeringdb_rdr.Read())
		{
			if (!ixlanlist.Contains(peeringdb_rdr["ixlan_id"]))
			{
				ixlanlist.Add(peeringdb_rdr["ixlan_id"]);
			}
		}
		peeringdb_rdr.Close();

		peeringdb_cmd = new MySqlCommand("select peeringdb_network_ixlan.id, peeringdb_ix.name, peeringdb_network_ixlan.ixlan_id, peeringdb_network_ixlan.net_id, peeringdb_network_ixlan.ipaddr4, peeringdb_network_ixlan.ipaddr6 from peeringdb_network_ixlan inner join peeringdb_ixlan on peeringdb_ixlan.id = peeringdb_network_ixlan.ixlan_id inner join peeringdb_ix on peeringdb_ix.id = peeringdb_ixlan.ix_id where asn = @asn;", peeringdb_conn);
		peeringdb_cmd.Prepare();
		peeringdb_cmd.Parameters.AddWithValue("@asn", selectedNetwork.asn);
		peeringdb_rdr = peeringdb_cmd.ExecuteReader();

		MySqlCommand luje_cmd = new MySqlCommand("select peering_active, peering_deployed from peering where peering_peeringdb_id = @peeringdb_id and peering_deleted = 0;", luje_conn);
		luje_cmd.Prepare();
		luje_cmd.Parameters.AddWithValue("@peeringdb_id", selectedNetwork.id);
		MySqlDataReader luje_rdr = luje_cmd.ExecuteReader();

		bool knownnetwork = false;
		if(luje_rdr.Read()) {
			knownnetwork = true;
		}
		luje_rdr.Close();

		<div class="columns nine">
			<h2>Peering Portal</h2>
			<p>@if (admin) {<span><a href="/portal/admin">Admin</a> -  </span>}<a href="/portal/logout">Logout</a> - <a href="/portal/">Portal Home</a> - <a href="/portal/network?asn=@selectedNetwork.asn">@selectedNetwork.name (@asn)</a></p>

			<table width="100%">
				<tr>
					<td width="20%">IXP</td>
					<td width="40%">IP Address</td>
					<td width="20%">Status</td>
					<td width="20%"></td>
				</tr>
				<tr>
					<td width="20%"></td>
					<td width="40%"></td>
					<td width="20%"></td>
					<td width="20%"></td>
				</tr>
				@while (peeringdb_rdr.Read())
				{
					if (ixlanlist.Contains(peeringdb_rdr["ixlan_id"]))
					{
						if (peeringdb_rdr["ipaddr4"] != null && peeringdb_rdr["ipaddr4"].ToString() != "")
						{
							string status = "Not configured";
							bool requestable = true;
							if(knownnetwork) {
								luje_cmd = new MySqlCommand("select peering_ips_active, peering_ips_rejected, peering_ips_deployed from peering_ips inner join peering on peering.peering_id = peering_ips_peering_id and peering_deleted = 0 where peering_ips_peeringdb_lanid = @lanid and peering_ips_peeringdb_addrid = @addrid and peering_ips_type = 4 and peering_peeringdb_id = @peeringdb_id and peering_ips_deleted = 0;", luje_conn);
								luje_cmd.Prepare();
								luje_cmd.Parameters.AddWithValue("@peeringdb_id", selectedNetwork.id);
								luje_cmd.Parameters.AddWithValue("@addrid", peeringdb_rdr["id"].ToString());
								luje_cmd.Parameters.AddWithValue("@lanid", peeringdb_rdr["ixlan_id"].ToString());
								luje_rdr = luje_cmd.ExecuteReader();

								if (luje_rdr.Read())
								{
									requestable = false;
									if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == false && Convert.ToBoolean(luje_rdr["peering_ips_rejected"]) == false)
									{
										status = "Pending approval";
									}
									else if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == false && Convert.ToBoolean(luje_rdr["peering_ips_rejected"]) == true)
									{
										status = "Rejected";
									}
									else if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == true && Convert.ToBoolean(luje_rdr["peering_ips_deployed"]) == false)
									{
										status = "Pending deployment";
									}
									else if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == true && Convert.ToBoolean(luje_rdr["peering_ips_deployed"]) == true)
									{
										status = "Deployed";
									}
								}
								luje_rdr.Close();
							}
							<tr>
								<td width="20%">@peeringdb_rdr["name"].ToString()</td>
								<td width="40%">@peeringdb_rdr["ipaddr4"].ToString()</td>
								<td width="20%">@status</td>
								<td width="20%">@if(requestable){<a href="/portal/request?asn=@selectedNetwork.asn&lanid=@peeringdb_rdr["ixlan_id"].ToString()&addrid=@peeringdb_rdr["id"].ToString()&v=4">Request peering</a>}</td>
							</tr>
						}
						if (peeringdb_rdr["ipaddr6"] != null && peeringdb_rdr["ipaddr6"].ToString() != "")
						{
							string status = "Not configured";
							bool requestable = true;
							if(knownnetwork) {
								luje_cmd = new MySqlCommand("select peering_ips_active, peering_ips_rejected, peering_ips_deployed from peering_ips inner join peering on peering.peering_id = peering_ips_peering_id and peering_deleted = 0 where peering_ips_peeringdb_lanid = @lanid and peering_ips_peeringdb_addrid = @addrid and peering_ips_type = 6 and peering_peeringdb_id = @peeringdb_id and peering_ips_deleted = 0;", luje_conn);
								luje_cmd.Prepare();
								luje_cmd.Parameters.AddWithValue("@peeringdb_id", selectedNetwork.id);
								luje_cmd.Parameters.AddWithValue("@addrid", peeringdb_rdr["id"].ToString());
								luje_cmd.Parameters.AddWithValue("@lanid", peeringdb_rdr["ixlan_id"].ToString());
								luje_rdr = luje_cmd.ExecuteReader();

								if (luje_rdr.Read())
								{
									requestable = false;
									if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == false && Convert.ToBoolean(luje_rdr["peering_ips_rejected"]) == false)
									{
										status = "Pending approval";
									}
									else if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == false && Convert.ToBoolean(luje_rdr["peering_ips_rejected"]) == true)
									{
										status = "Rejected";
									}
									else if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == true && Convert.ToBoolean(luje_rdr["peering_ips_deployed"]) == false)
									{
										status = "Pending deployment";
									}
									else if (Convert.ToBoolean(luje_rdr["peering_ips_active"]) == true && Convert.ToBoolean(luje_rdr["peering_ips_deployed"]) == true)
									{
										status = "Deployed";
									}
								}
								luje_rdr.Close();
							}
							<tr>
								<td width="20%">@peeringdb_rdr["name"].ToString()</td>
								<td width="40%">@peeringdb_rdr["ipaddr6"].ToString()</td>
								<td width="20%">@status</td>
								<td width="20%">@if(requestable){<a href="/portal/request?asn=@selectedNetwork.asn&lanid=@peeringdb_rdr["ixlan_id"].ToString()&addrid=@peeringdb_rdr["id"].ToString()&v=6">Request peering</a>}</td>
							</tr>
						}
					}
				}
			</table>

			@{
				luje_cmd = new MySqlCommand("select peering_ips_extra_active, peering_ips_extra_deployed, peering_ips_extra_addr, peering_ips_extra_id from peering_ips_extra inner join peering on peering.peering_id = peering_ips_extra_peering_id and peering_deleted = 0 where peering_peeringdb_id = @peeringdb_id and peering_ips_extra_deleted = 0;", luje_conn);
				luje_cmd.Prepare();
				luje_cmd.Parameters.AddWithValue("@peeringdb_id", selectedNetwork.id);
				luje_rdr = luje_cmd.ExecuteReader();
			}
			@if(luje_rdr.HasRows)
			{
				<h3>Extra IPs</h3>
				<table width="100%">
					<tr>
						<td width="60%">IP Address</td>
						<td width="40%">Status</td>
					</tr>
					<tr>
						<td width="60%"></td>
						<td width="40%"></td>
					</tr>
					@while (luje_rdr.Read())
					{
						string status = "Not configured";
						if (Convert.ToBoolean(luje_rdr["peering_ips_extra_active"]) == false)
						{
							status = "Pending approval";
						}
						else if (Convert.ToBoolean(luje_rdr["peering_ips_extra_active"]) == true && Convert.ToBoolean(luje_rdr["peering_ips_extra_deployed"]) == false)
						{
							status = "Pending deployment";
						}
						else if (Convert.ToBoolean(luje_rdr["peering_ips_extra_active"]) == true && Convert.ToBoolean(luje_rdr["peering_ips_extra_deployed"]) == true)
						{
							status = "Deployed";
						}
						<tr>
							<td width="60%">@luje_rdr["peering_ips_extra_addr"].ToString()</td>
							<td width="40%">@status</td>
						</tr>
					}
				</table>
			}
		</div>
		peeringdb_rdr.Close();
		peeringdb_conn.Close();
		luje_conn.Close();
	}
	catch (HttpRequestException e)
	{
		Console.WriteLine("\nException Caught!");
		Console.WriteLine("Message :{0} ", e.Message);
	}
}
